{
    "filterParams": {
        "alwaysShowBothConditions": {
            "default": false,
            "description": "By default, only one condition is shown, and a second is made visible once a first condition has been entered. Set this to `true` to always show both conditions. In this case the second condition will be disabled until a first condition has been entered.",
            "relevantTo": [
                "Text",
                "Number",
                "Date"
            ]
        },
        "filterOptions": {
            "description": "Array of [Filter Options](/filter-provided-simple/#simple-filter-options) to present to the user. See [Filter Options](/filter-provided-simple/#simple-filter-options) for all options available to each filter type.",
            "type": "string[]",
            "relevantTo": [
                "Text",
                "Number",
                "Date"
            ]
        },
        "defaultOption": {
            "description": "The default [Filter Option](/filter-provided-simple/#simple-filter-options) to be selected.",
            "type": "string",
            "relevantTo": [
                "Text",
                "Number",
                "Date"
            ]
        },
        "defaultJoinOperator": {
            "description": "By default, the two conditions are combined using `AND`. You can change this default by setting this property.",
            "type": "string",
            "options": [
                "AND",
                "OR"
            ],
            "relevantTo": [
                "Text",
                "Number",
                "Date"
            ]
        },
        "suppressAndOrCondition": {
            "description": "If `true`, the filter will only allow one condition.",
            "default": false,
            "relevantTo": [
                "Text",
                "Number",
                "Date"
            ]
        },
        "textCustomComparator": {
            "description": "Used to override how to filter based on the user input.",
            "more": {
                "name": "Text Custom Comparator",
                "url": "/filter-text/#text-custom-comparator"
            },
            "relevantTo": [
                "Text"
            ]
        },
        "caseSensitive": {
            "description": "By default, text filtering is case-insensitive. Set this to `true` to make text filtering case-sensitive.",
            "default": false,
            "relevantTo": [
                "Text"
            ]
        },
        "textFormatter": {
            "description": "Formats the text before applying the filter compare logic. Useful if you want to substitute accented characters, for example.",
            "relevantTo": [
                "Text"
            ]
        },
        "trimInput": {
            "default": false,
            "description": "If `true`, the input that the user enters will be trimmed when the filter is applied, so any leading or trailing whitespace will be removed. If only whitespace is entered, it will be left as-is. If you enable `trimInput`, it is best to also increase the `debounceMs` to give users more time to enter text.",
            "relevantTo": [
                "Text"
            ]
        },
        "inRangeInclusive": {
            "description": "If `true`, the `'inRange'` filter option will include values equal to the start and end of the range.",
            "relevantTo": [
                "Number",
                "Date"
            ]
        },
        "includeBlanksInEquals": {
            "description": "If `true`, blank (`null` or `undefined`) values will pass the `'equals'` filter option.",
            "relevantTo": [
                "Number",
                "Date"
            ]
        },
        "includeBlanksInLessThan": {
            "description": "If `true`, blank (`null` or `undefined`) values will pass the `'lessThan'` and `'lessThanOrEqual'` filter options.",
            "relevantTo": [
                "Number",
                "Date"
            ]
        },
        "includeBlanksInGreaterThan": {
            "description": "If `true`, blank (`null` or `undefined`) values will pass the `'greaterThan'` and `'greaterThanOrEqual'` filter options.",
            "relevantTo": [
                "Number",
                "Date"
            ]
        },
        "includeBlanksInRange": {
            "description": "If `true`, blank (`null` or `undefined`) values will pass the `'inRange'` filter option.",
            "relevantTo": [
                "Number",
                "Date"
            ]
        },
        "allowedCharPattern": {
            "description": "When specified, the input field will be of type `text` instead of `number`, and this will be used as a regex of all the characters that are allowed to be typed. This will be compared against any typed character and prevent the character from appearing in the input if it does not match, in supported browsers (all except Safari).",
            "relevantTo": [
                "Number"
            ]
        },
        "numberParser": {
            "description": "Typically used alongside `allowedCharPattern`, this provides a custom parser to convert the value entered in the filter inputs into a number that can be used for comparisons.",
            "relevantTo": [
                "Number"
            ]
        },
        "comparator": {
            "description": "Required if the data for the column are not native JS `Date` objects.",
            "relevantTo": [
                "Date"
            ]
        },
        "browserDatePicker": {
            "description": "This is only used if a date component is not provided. By default the grid will use the browser date picker in Chrome and Firefox and a plain text box for all other browsers (this is because Chrome and Firefox are the only current browsers providing a decent out-of-the-box date picker). If this property is set to `true`, the browser date picker will be used regardless of the browser type. If set to `false`, a plain text box will be used for all browsers.",
            "relevantTo": [
                "Date"
            ]
        },
        "minValidYear": {
            "default": 1000,
            "description": "This is the minimum year that must be entered in a date field for the value to be considered valid.",
            "relevantTo": [
                "Date"
            ]
        }
    }
}