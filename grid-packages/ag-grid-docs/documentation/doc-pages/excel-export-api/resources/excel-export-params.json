{
    "excelExportParams": {
        "author": {
            "default": "AG Grid",
            "description": "The author of the exported file.",
            "type": "string"
        },
        "autoConvertFormulas": {
            "default": false,
            "description": "If set to `true`, this will try to convert any cell that starts with `=` to a formula, instead of setting the cell value as regular string that starts with `=`.",
            "type": "boolean"
        },
        "columnWidth": {
            "description": "Defines the default column width. If no value is present, each column will have value currently set in the application with a min value of 75px. This property can also be supplied a callback function that returns a number: `(params: ColumnWidthCallbackParams) => number`.",
            "type": "number"
        },
        "exportMode": {
            "default": "xlsx",
            "description": "For backwards compatibility, this property could be set to `xml`, which will export an Excel Spreadsheet compatible with old Office versions (prior to Office 2007). Setting this to `xml` is not recommended as some features will not work in legacy mode.",
            "type": "string",
            "options": ["xlsx", "xml"]
        },
        "fontSize": {
            "default": 11,
            "description": "The default value for the font size of the Excel document.",
            "type": "number"
        },
        "headerRowHeight": {
            "description": "The height in pixels of header rows. Defaults to Excel default value. This property can also be supplied a callback function that returns a number: `(params: RowHeightCallbackParams) => number`.",
            "type": "number | Function"
        },
        "rowHeight": {
            "description": "The height in pixels of all rows. Defaults to Excel default value. This property can also be supplied a callback function that returns a number: `(params: RowHeightCallbackParams) => number`.",
            "type": "number | Function"
        },
        "sheetName": {
            "default": "ag-grid",
            "description": "The name of the sheet in Excel where the grid will be exported. There is a max limit of 31 characters.",
            "type": "string"
        },
        "appendContent": {
            "description": "Content to put at the top of the exported sheet. A 2D array of ExcelCell objects (see <a href=\"../excel-export-extra-content/\">Extra Content</a> section).",
            "type": "ExcelCell[][]"
        },
        "prependContent": {
            "description": "Content to put at the bottom of the exported sheet. A 2D array of ExcelCell objects (see <a href=\"../excel-export-extra-content/\">Extra Content</a> section).",
            "type": "ExcelCell[][]"
        },
        "allColumns": {
            "default": false,
            "description": "If `true`, all columns will be exported in the order they appear in the columnDefs. When `false` only the columns currently being displayed will be exported.",
            "type": "boolean"
        },
        "columnKeys": {
            "description": "Provide a list (an array) of column keys or Column objects if you want to export specific columns.",
            "type": "(string | Column)[]"
        },
        "fileName": {
            "default": "export.xlsx",
            "description": "String to use as the file name.",
            "type": "string"
        },
        "onlySelected": {
            "default": false,
            "description": "Export only selected rows.",
            "type": "boolean"
        },
        "onlySelectedAllPages": {
            "default": false,
            "description": "Only export selected rows including other pages (only makes sense when using pagination).",
            "type": "boolean"
        },
        "margins": {
            "description": "The Excel document page margins. Relevant for printing.",
            "type": "ExcelSheetMargin"
        },
        "pageSetup": {
            "description": "Allows you to setup the page orientation and size.",
            "type": "ExcelSheetPageSetup"
        },
        "suppressTextAsCDATA": {
            "default": false,
            "description": "If `true`, text content will be encoded with XML character entities like `&amp;lt;` and `&amp;gt;`. This is only relevant when `exportMode='xml'`.",
            "type": "boolean"
        },
        "skipColumnGroupHeaders": {
            "default": false,
            "description": "Set to `true` to exclude header column groups.",
            "type": "boolean"
        },
        "skipColumnHeaders": {
            "default": false,
            "description": "Set to `true` if you don't want to export column headers.",
            "type": "boolean"
        },
        "skipRowGroups": {
            "default": false,
            "description": "Set to `true` to skip row group headers if grouping rows. Only relevant when grouping rows.",
            "type": "boolean"
        },
        "skipPinnedBottom": {
            "default": false,
            "description": "Set to `true` to suppress exporting rows pinned to the bottom of the grid.",
            "type": "boolean"
        },
        "getCustomContentBelowRow": {
            "description": "A callback function to return content to be inserted below a row in the export.",
            "type": {
                "meta": {
                    "name": "ProcessRowGroupForExportParams"
                },
                "parameters": {
                    "node": "RowNode",
                    "api": "GridApi",
                    "columnApi": "ColumnApi",
                    "context": "object"
                },
                "returnType": "ExcelCell"
            }
        },
        "shouldRowBeSkipped": {
            "description": "A callback function that will be invoked once per row in the grid. Return true to omit the row from the export.",
            "type": {
                "meta": {
                    "name": "ShouldRowBeSkippedParams"
                },
                "parameters": {
                    "node": "RowNode",
                    "api": "GridApi",
                    "context": "object"
                },
                "returnType": "boolean"
            }
        },
        "processCellCallback": {
            "description": "A callback function invoked once per cell in the grid. Return a string value to be displayed in the export. For example this is useful for formatting date values.",
            "type": {
                "meta": {
                    "name": "ProcessCellForExportParams"
                },
                "parameters": {
                    "node": "RowNode",
                    "api": "GridApi",
                    "columnApi": "ColumnApi",
                    "context": "object",
                    "value": "any",
                    "accumulatedRowIndex": "number",
                    "column": "Column",
                    "type": "string"
                },
                "returnType": "string"
            }
        },
        "processHeaderCallback": {
            "description": "A callback function invoked once per column. Return a string to be displayed in the column header.",
            "type": {
                "meta": {
                    "name": "ProcessHeaderForExportParams"
                },
                "parameters": {
                    "node": "RowNode",
                    "api": "GridApi",
                    "columnApi": "ColumnApi",
                    "context": "object"
                },
                "returnType": "string"
            }
        },
        "processGroupHeaderCallback": {
            "description": "A callback function invoked once per column group. Return a `string` to be displayed in the column group header. Note that column groups are exported by default, this option will not work with `skipColumnGroupHeaders=true`.",
            "type": {
                "meta": {
                    "name": "ProcessGroupHeaderForExportParams"
                },
                "parameters": {
                    "node": "RowNode",
                    "api": "GridApi",
                    "columnApi": "ColumnApi",
                    "context": "object"
                },
                "returnType": "string"
            }
        },
        "processRowGroupCallback": {
            "description": "A callback function invoked once per row group. Return a `string` to be displayed in the group cell.",
            "type": {
                "meta": {
                    "name": "ProcessRowGroupForExportParams"
                },
                "parameters": {
                    "node": "RowNode",
                    "api": "GridApi",
                    "columnApi": "ColumnApi",
                    "context": "object"
                },
                "returnType": "string"
            }
        },
        "addImageToCell": {
            "description": "A callback function invoked once per cell. Return an `ExcelImage` object to add an image to the current cell.",
            "type": {
                "meta": {
                    "name":  "AddImageToCellParams"
                },
                "parameters": {
                    "rowIndex": "number",
                    "column": "Column",
                    "value": "string"
                },
                "returnType": {
                    "image": "ExcelImage",
                    "value": "string"
                }
            }
        }
    },
    "excelExportMultipleSheetParams": {
        "author": {
            "default": "AG Grid",
            "description": "The author of the exported file.",
            "type": "string"
        },
        "data": {
            "description": "Array of strings containing the raw data for Excel workbook sheets. This property is only used when exporting to multiple sheets using `api.exportMultipleSheetsAsExcel()` and the data for each sheet is obtained by calling `api.getSheetDataForExcel()`.",
            "type": "string[]",
            "more": {
                "name": "Multiple Sheets",
                "url": "/excel-export-multiple-sheets/"
            }
        },
        "fileName": {
            "default": "export.xlsx",
            "description": "String to use as the file name.",
            "type": "string"
        },
        "fontSize": {
            "default": 11,
            "description": "The default value for the font size of the Excel document.",
            "type": "number"
        }
    },
    "excelCell": {
        "data": {
            "description": "The data that will be added to the cell.",
            "type": "ExcelData"
        },
        "styleId": {
            "description": "The ExcelStyle id to be associated with the cell.",
            "type": "string"
        },
        "mergeAcross": {
            "default": 0,
            "description": "The number of cells to span across (1 means span 2 columns)",
            "type": "number"
        }
    },
    "excelData": {
        "type": {
            "description": "The type of data being in the cell.",
            "type": "ExcelDataType",
            "isRequired": true
        },
        "value": {
            "description": "The value of the cell.",
            "type": "string",
            "isRequired": true
        }
    },
    "excelDataType": {
        "type": "string",
        "options": ["String", "Formula", "Number", "Boolean", "DateTime", "Error"]
    },
    "excelImage": {
        "id": {
            "description": "The image `id`. This field is required so the same image doesn't get imported multiple times.",
            "type": "string",
            "isRequired": true
        },
        "base64": {
            "description": "A base64 string that represents the image being imported. See more info about <a href=\"https://en.wikipedia.org/wiki/Base64\" target=\"_blank\">Base64</a>/",
            "type": "string",
            "isRequired": true
        },
        "imageType": {
            "description": "The type of image being exported.",
            "type": "string",
            "options": ["jpg", "png", "gif"],
            "isRequired": true
        },
        "fitCell": {
            "default": false,
            "description": "If set to `true`, the image will cover the whole cell that is being imported to.",
            "type": "boolean"
        },
        "transparency": {
            "default": 0,
            "description": "Set a value between 0 - 100 that will indicate the percentage of transparency of the image.",
            "type": "number"
        },
        "rotation": {
            "default": 0,
            "description": "Set a value between 0 - 359 that will indicate the number of degrees to rotate the image clockwise.",
            "type": "number"
        },
        "recolor": {
            "description": "Set this property to select a preset that changes the appearance of the image.",
            "type": "string",
            "options": ["Grayscale", "Sepia","Washout"]
        },
        "width": {
            "description": "The width of the image in pixels. If this value is not selected, `fitCell` will be automatically set to true.",
            "type": "number"
        },
        "height": {
            "description": "The height of the image in pixels. If this value is not selected, `fitCell` will be automatically set to true.",
            "type": "number"
        },
        "position": {
            "row": {
                "description": "The row containing this image. This property is set automatically, don't change it unless you know what you are doing.",
                "type": "number"
            },
            "rowSpan": {
                "default": 1,
                "description": "The amount of rows this image will cover.",
                "type": "number"
            },
            "column": {
                "description": "The column containing this image. This property is set automatically, don't change it unless you know what you are doing.",
                "type": "number"
            },
            "colSpan": {
                "default": 1,
                "description": "The amount of columns this image will cover.",
                "type": "number"
            },
            "offsetX": {
                "default": 0,
                "description": "The amount in pixels the image should be offset horizontally.",
                "type": "number"
            },
            "offsetY": {
                "default": 0,
                "description": "The amount in pixels the image should be offset vertically.",
                "type": "number"
            }
        }
    },
    "excelStyle": {
        "id": {
            "description": "The id of the Excel Style, this should match a CSS cell class.",
            "type": "string",
            "isRequired": true
        },
        "alignment": {
            "description": "Use this property to customise cell alignment properties.",
            "type": "ExcelAlignment"
        },
        "borders": {
            "description": "Use this property to customise cell borders.",
            "type": "ExcelBorders"
        },
        "dataType": {
            "default": "String",
            "description": "Use this property to specify the type of data being exported.",
            "type": "ExcelDataType"
        },
        "font": {
            "description": "Use this property to customise the font used in the cell.",
            "type": "ExcelFont"
        },
        "interior": {
            "description": "Use this property to customise the cell background.",
            "type": "ExcelInterior"
        },
        "numberFormat": {
            "description": "Use this property to customise the cell value as a formatted number.",
            "type": "ExcelNumberFormat"
        },
        "protection": {
            "description": "Use this property to setup cell protection.",
            "type": "ExcelProtection"
        }
    },
    "excelAlignment": {
        "horizontal": {
            "default": "Automatic",
            "description": "Use this property to change the cell horizontal alignment.",
            "options": [
                "Automatic",
                "Left",
                "Center",
                "Right",
                "Fill",
                "Justify",
                "CenterAcrossSelection",
                "Distributed",
                "JustifyDistributed"
            ],
            "type": "string"
        },
        "indent": {
            "default": 0,
            "description": "Use this property to change the level of indentation in the cell.",
            "type": "number"
        },
        "readingOrder": {
            "default": "LeftToRight",
            "description": "Use this property to change the cell reading order.",
            "options": [
                "RightToLeft",
                "LeftToRight",
                "Context"
            ],
            "type": "string"
        },
        "rotate": {
            "default": 0,
            "description": "The number of degrees between 0 and 359 to rotate the text.",
            "type": "number"
        },
        "shrinkToFit": {
            "default": false,
            "description": "If set to `true`, the font size of the cell will automatically change to force the text to fit within the cell.",
            "type": "boolean"
        },
        "vertical": {
            "default": "Automatic",
            "description": "Use this property to change the cell vertical alignment.",
            "options": [
                "Automatic",
                "Top",
                "Bottom",
                "Center",
                "Justify",
                "Distributed",
                "JustifyDistributed"
            ],
            "type": "string"
        },
        "wrapText": {
            "default": false,
            "description": "If set to `true`, multiline text will be displayed as multiline by Excel.",
            "type": "boolean"
        }
    },
    "excelBorders": {
        "borderBottom": {
            "description": "Use to set the cell's bottom border.",
            "type": "ExcelBorder"
        },
        "borderLeft": {
            "description": "Use to set the cell's left border.",
            "type": "ExcelBorder"
        },
        "borderRight": {
            "description": "Use to set the cell's right border.",
            "type": "ExcelBorder"
        },
        "borderTop": {
            "description": "Use to set the cell's top border.",
            "type": "ExcelBorder"
        }
    },
    "excelBorder": {
        "color": {
            "default": "black",
            "description": "The color of the border.",
            "type": "string"
        },
        "lineStyle": {
            "default": "None",
            "description": "The style of the border.",
            "options": [
                "None",
                "Continuous",
                "Dash",
                "Dot",
                "DashDot",
                "DashDotDot",
                "SlantDashDot",
                "Double"
            ],
            "type": "string"
        },
        "weight": {
            "default": 0,
            "description": "The thickness of the border from 0 (thin) to 3 (thick)",
            "options": [0, 1, 2, 3],
            "type": "number"
        }
    },
    "excelFont": {
        "bold": {
            "default": false,
            "description": "Set to `true` to set the cell text to bold.",
            "type": "boolean"
        },
        "color": {
            "default": "#000000",
            "description": "The color of the cell font.",
            "type": "string"
        },
        "family": {
            "default": "Automatic",
            "description": "The family of the font to used in the cell.",
            "type": "string",
            "options": ["Automatic", "Roman", "Swiss", "Modern", "Script", "Decorative"]
        },
        "fontName": {
            "default": "Calibri",
            "description": "The name of the font to be used in the cell.",
            "type": "string"
        },
        "italic": {
            "default": false,
            "description": "Set to `true` to display the cell font as italic.",
            "type": "boolean"
        },
        "outline": {
            "default": false,
            "description": "Set to `true` to add a text outline.",
            "type": "boolean"
        },
        "shadow": {
            "default": false,
            "description": "Set to `true` to add text shadow.",
            "type": "boolean"
        },
        "size": {
            "description": "Set this property to used a different font size other than the default.",
            "type": "number"
        },
        "strikeThrough": {
            "default": false,
            "description": "Set to `true` to add a strikeThrough line.",
            "type": "boolean"
        },
        "underline": {
            "description": "Use this property to underline the cell text.",
            "options": [
                "Single",
                "Double"
            ],
            "type": "string"
        },
        "verticalAlign": {
            "description": "Use this property to change the default font alignment. Note: This is different than setting cell vertical alignment.",
            "options": [
                "Superscript",
                "Subscript"
            ],
            "type": "string"
        }
    },
    "excelInterior": {
        "color": {
            "description": "The colour of the cell background.",
            "type": "string"
        },
        "pattern": {
            "default": "None",
            "description": "Use this property to set background color patterns.",
            "options": [
                "None", "Solid", "Gray75", "Gray50", "Gray25", "Gray125", "Gray0625", "HorzStripe", "VertStripe", "ReverseDiagStripe", "DiagStripe", "DiagCross", "ThickDiagCross", "ThinHorzStripe", "ThinVertStripe", "ThinReverseDiagStripe", "ThinDiagStripe", "ThinHorzCross", "ThinDiagCross"
            ],
            "type": "string"
        },
        "patternColor": {
            "description": "The colour to be used as a secondary colour combined with patterns.",
            "type": "string"
        }
    },
    "excelNumberFormat": {
        "format": {
            "description": "Use this property to provide a pattern to format a number. (eg. 10000 could become $10,000.00).",
            "type": "string"
        }
    },
    "excelProtection": {
        "protected": {
            "default": false,
            "description": "Set to `true` to enable cell protection",
            "type": "boolean"
        },
        "hideFormula": {
            "default": false,
            "description": "Set to `true` to hide formulas within protected cells",
            "type": "boolean"
        }
    },
    "excelSheetMargin": {
        "top": {
            "default": 0.75,
            "description": "The sheet top margin.",
            "type": "number"
        },
        "right": {
            "default": 0.7,
            "description": "The sheet right margin.",
            "type": "number"
        },
        "bottom": {
            "default": 0.75,
            "description": "The sheet bottom margin.",
            "type": "number"
        },
        "left": {
            "default": 0.7,
            "description": "The sheet left margin.",
            "type": "number"
        },
        "header": {
            "default": 0.3,
            "description": "The sheet header margin.",
            "type": "number"
        },
        "footer": {
            "default": 0.3,
            "description": "The sheet footer margin.",
            "type": "number"
        }
    },
    "excelSheetPageSetup": {
        "orientation": {
            "default": "Portrait",
            "description": "Use this property to change the print orientation.",
            "options": [
                "Portrait",
                "Landscape"
            ],
            "type": "string"
        },
        "pageSize": {
            "default": "Letter",
            "description": "Use this property to set the sheet size.",
            "options": [
                "Letter",
                "Letter Small",
                "Tabloid",
                "Ledger",
                "Legal",
                "Statement",
                "Executive",
                "A3",
                "A4",
                "A4 Small",
                "A5",
                "A6",
                "B4",
                "B5",
                "Folio",
                "Envelope",
                "Envelope DL",
                "Envelope C5",
                "Envelope B5",
                "Envelope C3",
                "Envelope C4",
                "Envelope C6",
                "Envelope Monarch",
                "Japanese Postcard",
                "Japanese Double Postcard"
            ],
            "type": "string"
        }
    },
    "excelHeaderFooterConfig": {
        "all": {
            "description": "The configuration for header and footer on every page.",
            "type": "ExcelHeaderFooter"
        },
        "first": {
            "description": "The configuration for header and footer on the first page only.",
            "type": "ExcelHeaderFooter"
        },
        "even": {
            "description": "The configuration for header and footer on even numbered pages only..",
            "type": "ExcelHeaderFooter"
        }
    },
    "excelHeaderFooter": {
        "header": {
            "description": "An array of maximum 3 items (Left, Center, Right), containing header configurations.",
            "type": "ExcelHeaderFooterContent[]"
        },
        "footer": {
            "description": "An array of maximum 3 items (Left, Center, Right), containing footer configurations.",
            "type": "ExcelHeaderFooterContent[]"
        }
    },
    "excelHeaderFooterContent": {
        "value": {
            "description": "The value of the text to be included in the header.",
            "type": "string",
            "isRequired": true
        },
        "position": {
            "description": "Configures where the text should be added (Left, Center, Right)",
            "default": "Left",
            "type": "string",
            "options": ["Left", "Center", "Right"]
        },
        "font": {
            "description": "The font style of the header/footer value.",
            "type": "ExcelFont"
        }
    }
}